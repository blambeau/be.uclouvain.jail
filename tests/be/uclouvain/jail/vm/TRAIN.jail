define (adot <A>) 
	     (copy (A)
             :vertex {@shape -> when @kind='ACCEPTING' then 'doublecircle'
                                when @kind='AVOID' then 'doublecircle'
                                else 'circle',
                      @style -> 'filled',
                      @fillcolor -> when @isInitial=true and 
                                        (@kind='ERROR' or @kind='AVOID') then 'brown'
                                    when @isInitial=true then 'green'
                                    when @kind='ERROR' then 'red'
                                    when @kind='AVOID' then 'red'
                                    else 'white',
                      @label     -> @label}
		     :edge  {@label -> @letter});
define (show <A>)
	     (jdotty (adot (A)));

TRAIN = <§seqp 
	STOPPED=start->STARTED|alarm->open->OPENED,
	STARTED=stop->STOPPED|alarm->stop->open->OPENED,
	OPENED=close->STOPPED.
§>;
NFA = (tmoves (TRAIN) :tau 'alarm');
DFA = (determinize (NFA));
MIN = (minimize (DFA));

(show (TRAIN));
(show (NFA));
(show (DFA));
(show (MIN));