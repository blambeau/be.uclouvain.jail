(execute 'commons.jail');

// identifies all states by incrementation
define (identify <G>)
	     (copy G :vertex {@id    -> increment()});
define (allaccept <A>)
	     (copy (A) :vertex {@kind -> when @kind='PASSAGE' then 'ACCEPTING'
			                             when @kind='ERROR' then 'AVOID'
			                             else	@kind});


// generate a random DFA with aai tuning
A = <§seqp Q0. §>;
G = (randdfa A   :stateCount stateCount :alphabetSize 2 :accepting 1.0 :tolerance 0.01);
H = (randstrings A :alphabetSize 2 :wordLength 10 :nbStrings nbStrings :labeller G);
(show G);
(show H);
//(show (rpni H));
//(show (rpni H :oracle 'blambeau' :querier G)); 

