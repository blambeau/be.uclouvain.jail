/**
 * Executes the .jail file located to the path.
 *
 * <path>          + (String) path to an accessible file containing jail 
 *                   commands.
 */
define native (execute <path>);

/**
 * Saves a Jail resource to an accessible path.
 *
 * When format option is not specified, the file extension is used to
 * autodetect the writer to use.
 *
 * This commands simply returns its resource argument so that it can be
 * chained easily for debugging purposes.
 * 
 * <G>             + (IPrintable) a resource expression whose result must be 
 *                    saved. 
 * <path>          + (String) path to an accessible file where the resource must 
 *                    be saved to.
 * <format>        + (String) output format of the resource ('dot' for example).
 */
define native (save <G> <path> :format? <format>) returns <G>;

/** 
 * Loads a Jail resource from an accessible path. 
 * 
 * When format option is not specified, the file extension is used to
 * autodetect the parser to use.
 *
 * <path>          + (String) path to an accessible file where the resource
 *                   must be loaded from.
 * <format>        + (String) input format of the resource ('dot' for example).
 */
define native (load <path> :format? <format>) returns object;

/**
 * Prints a resource on the console.
 *
 * This commands simply returns its resource argument so that it can be
 * chained easily for debugging purposes.
 * 
 * <G...>          + (IPrintable) resource expressions whose results must be 
 *                   printed. 
 * <format>        + (String) output format to use ('dot' for example).
 */
define native (print <G...> :format <format>) returns <G[0]>;

/**
 * Returns a graph which presents all possible adaptations of <A>.
 *
 * <A>             + (Object) any expression that returns a typed result.
 * <G>             + (IDirectedGraph) directed graph representing adaptation
 *                   tree of <A>
 */
define native (adaptations <A>) returns <G>;

/**
 * Cast the value <A> to a specific java type <T>.
 *
 * An error message is displayed if <A> is not <T> adaptable (see adaptability
 * documentation).
 *
 * <A>             + (Object) any expression that returns a typed result.
 * <T>             + (String) a fully java type qualified name (package + class/interface).
 * <A'>            + (<T>) value <A> converted to type <T> if possible, null otherwise. 
 *
 */
define native (cast <A> <T>) returns <A'>;
